{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Osmon Lang",
	"patterns": [
		{
		  "include": "#comments"
		},
		{
		  "include": "#keywords"
		},
		{
		  "include": "#strings"
		},
		{
		  "include": "#constant"
		},
		{
		  "include": "#entity"
		}
	  ],
	  "repository": {
		"keywords": {
		  "patterns": [
			{
			  "name": "keyword.control.osmon",
			  "match": "\\b(joy|agar|tuga|unda|toki|qachonki|qayta|toxta|qaytar|yangi|funksiya|tur|shu|guruh|label|goto)\\b"
			},
			{
			  "name": "keyword.operator.arrow.osmon",
			  "match": "->"
			},
			{
			  "name": "keyword.operator.pipe.osmon",
			  "match": "\\|>"
			},
			{
			  "name": "keyword.operator.splat.osmon",
			  "match": "\\.\\."
			},
			{
			  "name": "keyword.operator.comparison.float.osmon",
			  "match": "(<=\\.|>=\\.|==\\.|!=\\.|<\\.|>\\.)"
			},
			{
			  "name": "keyword.operator.comparison.int.osmon",
			  "match": "(<=|>=|==|!=|<|>)"
			},
			{
			  "name": "keyword.operator.logical.osmon",
			  "match": "(&&|\\|\\|)"
			},
			{
			  "name": "keyword.operator.other.osmon",
			  "match": "\\|"
			},
			{
			  "name": "keyword.operator.arithmetic.float.osmon",
			  "match": "(\\+\\.|\\-\\.|/\\.|\\*\\.|%\\.)"
			},
			{
			  "name": "keyword.operator.arithmetic.int.osmon",
			  "match": "(\\+|\\-|/|\\*|%)"
			},
			{
			  "name": "keyword.operator.assignment.osmon",
			  "match": "="
			}
		  ]
		},
		"strings": {
		  "name": "string.quoted.double.osmon",
		  "begin": "\"",
		  "end": "\"",
		  "patterns": [
			{
			  "name": "constant.character.escape.osmon",
			  "match": "\\\\."
			}
		  ]
		},
		"comments": {
		  "patterns": [
			{
			  "name": "comment.line.osmon",
			  "match": "\/\/.*"
			}
		  ]
		},
		"constant": {
		  "patterns": [
			{
			  "include": "#binary_number"
			},
			{
			  "include": "#octal_number"
			},
			{
			  "include": "#hexadecimal_number"
			},
			{
			  "include": "#decimal_number"
			},
			{
			  "include": "#boolean"
			},
			{
			  "name": "entity.name.type.osm",
			  "match": "[[:upper:]][[:word:]]*"
			}
		  ]
		},
		"binary_number": {
		  "name": "constant.numeric.binary.osmon",
		  "match": "\\b0b[0-1]+\\b",
		  "patterns": []
		},
		"octal_number": {
		  "name": "constant.numeric.octal.osmon",
		  "match": "\\b0o[0-7]+\\b",
		  "patterns": []
		},
		"decimal_number": {
		  "name": "constant.numeric.decimal.osmon",
		  "match": "\\b[[:digit:]][[:digit:]_]*(\\.[[:digit:]]*)?\\b",
		  "patterns": []
		},
		"hexadecimal_number": {
		  "name": "constant.numeric.hexadecimal.osmon",
		  "match": "\\b0x[[:xdigit:]]+\\b",
		  "patterns": []
		},
		"boolean": {
		  "name": "constant.language.boolean.osmon",
		  "match": "\\b(ha|yoq)\\b",
		  "patterns": []
		},
		"entity": {
		  "patterns": [
			{
			  "begin": "\\b([[:lower:]][[:word:]]*)([[:space:]]*)?\\(",
			  "end": "\\)",
			  "patterns": [
				{
				  "include": "$self"
				}
			  ],
			  "captures": {
				"1": {
				  "name": "entity.name.function.osmon"
				}
			  }
			},
			{
			  "name": "variable.parameter.osmon",
			  "match": "\\b([[:lower:]][[:word:]]*):\\s"
			},
			{
			  "name": "entity.name.namespace.osmon",
			  "match": "\\b([[:lower:]][[:word:]]*):"
			}
		  ]
		}
	  },
	  "scopeName": "source.osm"
	}